name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write  # ✅ ให้สิทธิ์ push

jobs:
  Docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # ✅ ใช้ v4 ล่าสุด

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22  # ✅ ใช้เวอร์ชัน LTS แทน Node.js 22
          cache: "npm"

      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Dependencies
        run: npm ci

      - name: axios
        run: npm i axios

      - name: Build Project
        run: npm run build

      - name: Save version
        id: version
        run: echo "tag=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV  # ✅ ใช้วิธีใหม่

      - name: Increase version
        run: npm version patch

      - name: Push new version
        run: |
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/YOUR_USERNAME/YOUR_REPOSITORY.git
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # ✅ ใช้ Personal Access Token (PAT) เพื่อให้ push ได้

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag big7983/iot-smartsystem:${{ env.tag }}

      - name: Push to Docker Hub
        run: docker push big7983/iot-smartsystem:${{ env.tag }}
